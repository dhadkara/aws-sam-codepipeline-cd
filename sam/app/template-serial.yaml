AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  This serverless app sets up an AWS CodePipeline Pipeline as a CD solution for a GitHub-based SAM project. Once setup, every time the specified GitHub repository branch is updated, the change will flow through the CodePipeline pipeline.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: aws-sam-codepipeline-cd
    Description: >-
      This serverless app sets up an AWS CodePipeline Pipeline as a CD solution for a GitHub-based SAM project. Once setup, every time the specified GitHub repository branch is updated, the change will flow through the CodePipeline pipeline.
    Author: AWS Serverless Application Repository
    SpdxLicenseId: MIT-0
    Labels: [github, cd, codepipeline, continuous-deploy, sam]
    HomePageUrl: https://github.com/awslabs/aws-sam-codepipeline-cd
    SemanticVersion: 1.1.0
    SourceCodeUrl: https://github.com/awslabs/aws-sam-codepipeline-cd/tree/1.1.0
    LicenseUrl: ../../LICENSE
    ReadmeUrl: ../../README.md

Outputs:
  ArtifactsBucketArn:
    Value: !GetAtt Artifacts.Arn
  ArtifactsBucketName:
    Value: !Ref Artifacts
  PipelineName:
    Value: !Ref Pipeline
  PipelineVersion:
    Value: !GetAtt Pipeline.Version

Parameters:
  ComputeType:
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
    Default: BUILD_GENERAL1_SMALL
    Description: AWS CodeBuild project compute type.
    Type: String
  EnvironmentType:
    AllowedValues:
      - LINUX_CONTAINER
      - WINDOWS_CONTAINER
    Default: LINUX_CONTAINER
    Description: Environment type used by AWS CodeBuild. See the documentation for details (https://docs.aws.amazon.com/codebuild/latest/userguide/create-project.html#create-project-cli).
    Type: String
  SourceCodeProvider:
    Type: String
    Description: Location of your source code repository
    Default: GitHub
    AllowedValues:
      - GitHub
      - CodeCommit
  GitHubOAuthToken:
    Description: OAuth token used by AWS CodePipeline to connect to GitHub
    NoEcho: true
    Type: String
    Default: ''
  GitHubOwner:
    Description: GitHub username owning the repo
    Type: String
    Default: dhadkara
  GitHubRepo:
    Description: GitHub repo name
    Type: String
    Default: node-sample-rest
  GitHubBranch:
    Description: GitHub repo branch name. It defaults to master if not specified.
    Type: String
    Default: master
  CodeCommitRepo:
    Type: String
    Description: CodeCommit repository name, only specify if you chose CodeCommit in SourceCodeProvider
    Default: ''
  CodeCommitBranch:
    Type: String
    Description: CodeCommit repository branch name, only specify if you chose CodeCommit in SourceCodeProvider.
    Default: master
 
Conditions:
  UseCodeCommit:
    !Equals [!Ref SourceCodeProvider, 'CodeCommit']
  UseGitHub:
    !Equals [!Ref SourceCodeProvider, 'GitHub']

Rules:
  ValidateGitHub:
    RuleCondition: !Equals [!Ref SourceCodeProvider, 'GitHub']
    Assertions:
      - Assert: !Not [!Equals [!Ref GitHubOwner, '']]
        AssertDescription: "GitHubOwner must be specified when SourceCodeProvider is GitHub"
      - Assert: !Not [!Equals [!Ref GitHubRepo, '']]
        AssertDescription: "GitHubRepo must be specified when SourceCodeProvider is GitHub"
      - Assert: !Not [!Equals [!Ref GitHubOAuthToken, '']]
        AssertDescription: "GitHubOAuthToken must be specified when SourceCodeProvider is GitHub"
      - Assert: !Not [!Equals [!Ref GitHubBranch, '']]
        AssertDescription: "GitHubBranch must be specified when SourceCodeProvider is GitHub"
  ValidateCodeCommit:
    RuleCondition: !Equals [!Ref SourceCodeProvider, 'CodeCommit']
    Assertions:
      - Assert: !Not [!Equals [!Ref CodeCommitRepo, '']]
        AssertDescription: "CodeCommitRepo must be specified when SourceCodeProvider is CodeCommit"
      - Assert: !Not [!Equals [!Ref CodeCommitBranch, '']]
        AssertDescription: "CodeCommitBranch must be specified when SourceCodeProvider is CodeCommit"

Resources:
  Artifacts:
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Status: Enabled
    Type: AWS::S3::Bucket
  ArtifactsPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket:
        Ref: Artifacts
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Principal:
              Service:
                - 'serverlessrepo.amazonaws.com'
            Resource:
              !Sub '${Artifacts.Arn}/*'
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref Artifacts
        Type: S3
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - !If
              - UseCodeCommit
              - Name: CodeCommitSource
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeCommit
                  Version: "1"
                Configuration:
                  RepositoryName: !Ref CodeCommitRepo
                  BranchName: !Ref CodeCommitBranch
                OutputArtifacts:
                  - Name: SourceArtifact
              - Name: GitHubSource
                ActionTypeId:
                  Category: Source
                  Owner: ThirdParty
                  Provider: GitHub
                  Version: "1"
                Configuration:
                  Owner: !Ref GitHubOwner
                  OAuthToken: !Ref GitHubOAuthToken
                  Repo: !Ref GitHubRepo
                  Branch: !Ref GitHubBranch
                  PollForSourceChanges: false
                OutputArtifacts:
                  - Name: SourceArtifact
        - Name: UnitTest
          Actions:
            - Name: UnitTest
              ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref TestProject
              InputArtifacts:
                - Name: SourceArtifact

        - Name: Analyze
          Actions:
            - Name: Analyze
              ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref AnalyzeProject
              InputArtifacts:
                - Name: SourceArtifact
    
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub "Used by CodePipeline. Created by CloudFormation ${AWS::StackId}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: s3-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${Artifacts}/*
              - Effect: Allow
                Action:
                  - "s3:ListBucket"
                  - "s3:GetBucketPolicy"
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${Artifacts}
        - PolicyName: codebuild-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - !GetAtt BuildProject.Arn
                  - !GetAtt AnalyzeProject.Arn
                  - !GetAtt TestProject.Arn
  
        - !If
          - UseCodeCommit
          - PolicyName: codecommit-access
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "codecommit:ListBranches"
                    - "codecommit:GetBranch"
                    - "codecommit:GetCommit"
                    - "codecommit:GetUploadArchiveStatus"
                    - "codecommit:GitPull"
                    - "codecommit:UploadArchive"
                    - "codecommit:CancelUploadArchive"
                  Resource:
                    - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitRepo}
          - !Ref AWS::NoValue
  TestProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt TestProjectRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-unit-test.yml
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: !Ref ComputeType
        Image: 'aws/codebuild/standard:2.0'
        Type: !Ref EnvironmentType
        EnvironmentVariables:
          - Name: PACKAGE_BUCKET
            Value: !Ref Artifacts
  
  AnalyzeProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt AnalyzeProjectRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-lint-test.yml
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: !Ref ComputeType
        Image: 'aws/codebuild/standard:2.0'
        Type: !Ref EnvironmentType
        EnvironmentVariables:
          - Name: PACKAGE_BUCKET
            Value: !Ref Artifacts

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt BuildProjectRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-build.yml
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: !Ref ComputeType
        Image: 'aws/codebuild/standard:2.0'
        Type: !Ref EnvironmentType
        EnvironmentVariables:
          - Name: PACKAGE_BUCKET
            Value: !Ref Artifacts
  GitHubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Condition: UseGitHub
    Properties:
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref Pipeline
      TargetAction: GitHubSource
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true
  
  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub codebuild-access-${AWS::StackName}
      Roles:
        - !Ref TestProjectRole
        - !Ref AnalyzeProjectRole
        - !Ref BuildProjectRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
          - Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${Artifacts}/*
          - Action:
              - s3:ListBucket
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${Artifacts}
  TestProjectRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub "Used in Unit Test project. Created by CloudFormation ${AWS::StackId}"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /service-role/
  
  AnalyzeProjectRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub "Used in Unit Test project. Created by CloudFormation ${AWS::StackId}"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /service-role/

  BuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub "Used in CodeBuild project. Created by CloudFormation ${AWS::StackId}"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /service-role/

